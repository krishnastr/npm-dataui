{"version":3,"sources":["../../../projects/data-viz-ui/src/lib/data-viz-ui.service.ts","../../../projects/data-viz-ui/src/lib/config.service.ts","../../../projects/data-viz-ui/src/lib/config/analytics-structured-events-mapping.ts","../../../projects/data-viz-ui/src/lib/config/data-viz-ui-environment-manager.ts","../../../projects/data-viz-ui/src/lib/config/app_config.ts","../../../projects/data-viz-ui/src/lib/authentication/config.ts","../../../projects/data-viz-ui/src/lib/authentication/authentication.service.ts","../../../projects/data-viz-ui/src/lib/snowplow/snowplow.service.ts","../../../projects/data-viz-ui/src/lib/components/visualization/visualization.service.ts","../../../projects/data-viz-ui/src/lib/components/visualization/visualization.component.ts","../../../projects/data-viz-ui/src/lib/components/visualization/visualization.component.html","../../../node_modules/tslib/tslib.es6.js","../../../projects/data-viz-ui/src/lib/common/useful-apis/array-apis.ts","../../../projects/data-viz-ui/src/lib/components/bookmarks/bookmarks.service.ts","../../../projects/data-viz-ui/src/lib/common/core/notification.service.ts","../../../projects/data-viz-ui/src/lib/components/bookmarks/bookmarks.component.html","../../../projects/data-viz-ui/src/lib/components/bookmarks/bookmarks.component.ts","../../../projects/data-viz-ui/src/lib/components/header/header.component.html","../../../projects/data-viz-ui/src/lib/components/header/header.component.ts","../../../projects/data-viz-ui/src/lib/data-viz-ui.component.html","../../../projects/data-viz-ui/src/lib/data-viz-ui.component.ts","../../../projects/data-viz-ui/src/lib/config/analytics-config.ts","../../../projects/data-viz-ui/src/lib/authentication/login/login.component.ts","../../../projects/data-viz-ui/src/lib/authentication/login/login.component.html","../../../projects/data-viz-ui/src/lib/authentication/token-interceptor.ts","../../../projects/data-viz-ui/src/lib/authentication/authentication.guard.ts","../../../projects/data-viz-ui/src/lib/authentication/unauthorized/unauthorized.component.ts","../../../projects/data-viz-ui/src/lib/authentication/ping/ping.component.html","../../../projects/data-viz-ui/src/lib/authentication/unauthorized/unauthorized.component.html","../../../projects/data-viz-ui/src/lib/authentication/ping/ping.component.ts","../../../projects/data-viz-ui/src/lib/data-viz-ui-routing.module.ts","../../../projects/data-viz-ui/src/lib/data-viz-ui.module.ts"],"names":["DataVizUiService","this","rolesObject$","Subject","distributorTaxonomy$","prototype","setRoles","roles","next","getRoles","asObservable","getTaxonomy","setTaxonomy","taxonomy","factory","ɵfac","providedIn","Injectable","ConfigService","configObject$","config","modules","header","bookmarks","envBasedReportIdsMap","dev","default","qa","staging","prod","embedUrlQueryParamsMap","uiElements","getConfigObject","updateValues","values","Object","assign","AnalyticsStructuredEventsMapping","fetchCategory","category","STRUCTURED_CATEGORY","fetchAction","action","STRUCTURED_ACTION","click","load","load-dashboard","login","logout","create-bookmark","update-bookmark","delete-bookmark","load-bookmarks","select-bookmarks","page-changed","DataVizUiEnvironmentManager","setEnvironment","environment","getEnvironment","setTenant","tenant","getTenant","AppConfig","fetchAppEnv","appEnv","appEnvMapping","environmentFileConstant","filter","Boolean","join","apiUrl","appEnvApiUrlMapping","snapshot","stable","production","Config","setConfig","apiConfig","endPoints","ping","token","getConfig","AuthenticationService","redirectUrl","isUserLoggedIn","BehaviorSubject","getTenantApiTokenKey","getAuthorizationToken","sessionStorage","getItem","isAuthenticated","setRedirectUrl","url","getRedirectUrl","getUserName","localStorage","getUserEmail","jwtToken","jwt_decode","getClientId","parseUserRole","length","some","role","toLowerCase","isAdmin","getUserRole","authenticate","setItem","decodedToken","getTentantApiTokenKey","tenantId","signOut","redirect","window","location","replace","clear","SnowplowService","analyticsService","authService","setUserId","userId","setCustomerId","setAppSessionId","userSessionId","fetchStructuredEventCategory","fetchStructuredEventAction","pageTracking","pageName","trackPage","eventTracking","label","property","value","trackEventFull","trackEvent","i0","ɵɵinject","i1","AnalyticsService","VisualizationService","http","configService","getEmbedToken","reportName","_this","get","getEmbedTokenUrl","pipe","map","catchError","handleError","console","log","getEmbedParams","params","keys","forEach","param","encoded","encodeURIComponent","error","errorMessage","ErrorEvent","message","status","alert","throwError","i1$1","HttpClient","VisualizationComponent","visualizationService","snowplowService","unSubscribe","MINUTES_BEFORE_EXPIRATION","INTERVAL_TIME","tokenExpiration","save","EventEmitter","defaultView","ngOnInit","subscribe","reportsContainer","document","getElementById","powerbi","pbi.service","Service","pbi.factories","hpmFactory","wpmpFactory","routerFactory","bootstrap","type","tokenType","models.TokenType","Embed","uniqueId","embedUrl","accessToken","settings","navContentPaneEnabled","setInterval","checkTokenAndUpdate","getReportName","getReports","embedResponse","embedReports","reportId","embedToken","report","embed","off","on","e","getBookmarkState","page","detail","newPage","displayName","event","state","bookmarksManager","capture","allPages","personalizeVisuals","emit","loadReport","bookmark","applyState","bookmarkState","then","appliedState","getPages","pages","setPage","name","takeUntil","resp","subscribeGetEmbedToken","expiration","updateToken","Distributor","Manufacturer","currentTime","Date","now","parse","setAccessToken","ngOnDestroy","complete","ɵɵdirectiveInject","selectors","outputs","features","ɵɵProvidersFeature","decls","vars","consts","template","rf","ctx","i0.ɵɵelement","Component","selector","templateUrl","providers","Output","create","__read","o","n","m","Symbol","iterator","r","i","call","ar","done","push","__spread","arguments","concat","arrayApis","sort","array","orderType","ascending","key","sortAlphabetically","a","b","la","bookmarkName","lb","reverse","BookmarkService","includes","getBookmarks","createBookmark","requestData","post","data","updateBookmark","editedBookmark","put","bookmarkId","updateBookmarkName","newName","deleteBookmark","delete","responseType","NotificationService","notificationSubject","notification$","publish","refCount","notify","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵtext","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵpropertyInterpolate","i0.ɵɵtextInterpolate1","i0.ɵɵattribute","BookmarksComponent","bookmarkService","notifier","dvService","selectedBookmark","title","allBookmarks","currentState","isModalOpen","duplicateBookmark","areFiltersChanged","states","showSettings","HIDE_SETTINGS_FOR_CLIENT_IDS","closeButton","saveButton","deleteButton","updateButton","modalOverlay","visualElem","distributorTaxonomy","onTaxonomyChange","searchBookmark","FormControl","bookmarkForm","FormGroup","Validators","required","pattern","minLength","maxLength","ngAfterContentInit","setTimeout","dropdownBtn","getElementsByClassName","blur","defaultViewBookmark","getDefaultView","catch","sortBookmarks","arrayApis.default","closeDropdown","resetDropdown","onClick","nativeElement","contains","target","onBookmarkSelect","onSearchBookmark","JSON","stringify","searchValue","onBookmarkNameChange","isDuplicate","trim","_a","saveBookmark","controls","duplicate","find","statusCode","setValue","subscribeCreateBookmark","unshift","bookmarkResp","subscribeUpdateBookmark","bkmk","reqObj","subscribeUpdateBookmarkName","updateName","editBookmark","currentDeleteBookmark","confirmDeleteBookmark","subscribeConfirmDeleteBookmark","closeModal","undefined","reset","dropdown","classList","add","scrollTop","remove","querySelector","checked","saveView","viewQuery","$event","i0.ɵɵtemplate","_r5","styleUrls","ViewChild","Input","HeaderComponent","visual","uiElementsListing","elements","appendElements","elementName","elementContainer","elementHtml","appendChild","inputs","DataVizUiComponent","ngOnChanges","changes","currentValue","ɵɵNgOnChangesFeature","AnalyticsConfig","SNOWPLOW_ENVIRONMENTS_MAPPING","SNOWPLOW_PARAMS","appId","options","snowplowEnvironmentProvider","provide","ANALYTICS_ENVIRONMENT","useFactory","tracking","inferred","pageViews","LoginComponent","router","route","consume","apiToken","navigate","trackLogin","consumePing","validRoute","routeConfig","path","routePath","indexOf","consumeToken","queryParams","i2","Router","ActivatedRoute","TokenInterceptor","intercept","req","headers","set","clone","handle","tap","HttpResponse","err","HttpErrorResponse","finalize","AuthenticationGuard","dataVizUiService","canActivate","checkLogin","UnauthorizedComponent","mailTo","mailSubject","sendEmail","href","PingComponent","isSuccess","DATA_VIZ_ROUTES","children","redirectTo","pathMatch","component","DataVizUiRoutingModule","getRoutes","RouterModule","forChild","imports","exports","NgModule","DataVizUiModule","HTTP_INTERCEPTORS","useClass","multi","CommonModule","ReactiveFormsModule","HttpClientModule","AnalyticsModule","forRoot","declarations"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataVizUiService {\r\n\r\n  rolesObject$ = new Subject<any>();\r\n  distributorTaxonomy$ = new Subject<any>();\r\n\r\n  constructor() { }\r\n\r\n  setRoles(roles: any[]): void {\r\n    this.rolesObject$.next(roles);\r\n  }\r\n\r\n  getRoles(): Observable<any> {\r\n    return this.rolesObject$.asObservable();\r\n  }\r\n\r\n  getTaxonomy(): Observable<any> {\r\n    return this.distributorTaxonomy$.asObservable();\r\n  }\r\n\r\n  setTaxonomy(taxonomy: any): void {\r\n    this.distributorTaxonomy$.next(taxonomy);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Config } from './interfaces/config.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n  configObject$ = new Subject<any>();\r\n\r\n  config: Config = {\r\n    modules: {\r\n      header: true,\r\n      bookmarks: true,\r\n    },\r\n    bookmarks: {\r\n      envBasedReportIdsMap: {\r\n        dev: {\r\n          default: '',\r\n        },\r\n        qa: {\r\n          default: '',\r\n        },\r\n        staging: {\r\n          default: '',\r\n        },\r\n        prod: {\r\n          default: '',\r\n        }\r\n      },\r\n      embedUrlQueryParamsMap: {\r\n        default: {\r\n        }\r\n      }\r\n    },\r\n    uiElements: [],\r\n    roles: [],\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  getConfigObject(): Observable<any> {\r\n    return this.configObject$.asObservable();\r\n  }\r\n  updateValues(values: object): void {\r\n    Object.assign(this.config, values);\r\n    this.configObject$.next(this.config);\r\n  }\r\n}\r\n","\r\nexport class AnalyticsStructuredEventsMapping {\r\n\r\n  public static STRUCTURED_ACTION = {\r\n    click: 'Click',\r\n    load: 'Page Load'\r\n  };\r\n\r\n  // Structured Events\r\n  public static STRUCTURED_CATEGORY = {\r\n    'load-dashboard': 'hida-load-dashboard',\r\n    login: 'hida-login',\r\n    logout: 'hida-logout',\r\n    'create-bookmark': 'hida-create-bookmark',\r\n    'update-bookmark': 'hida-update-bookmark',\r\n    'delete-bookmark': 'hida-delete-bookmark',\r\n    'load-bookmarks': 'hida-load-bookmarks',\r\n    'select-bookmarks': 'hida-select-bookmarks',\r\n    'page-changed': 'hida-page-changed'\r\n  };\r\n\r\n  public static fetchCategory(category: string): string {\r\n    const categories: { [key: string]: string } = this.STRUCTURED_CATEGORY;\r\n    return categories[category] || category;\r\n  }\r\n\r\n  public static fetchAction(action: string): string {\r\n    const actions: { [key: string]: string } = this.STRUCTURED_ACTION;\r\n    return actions[action] || action;\r\n  }\r\n}\r\n","export class DataVizUiEnvironmentManager {\r\n  private static environment: string;\r\n  private static tenant: string;\r\n\r\n  static setEnvironment(environment: string): void {\r\n    DataVizUiEnvironmentManager.environment = environment;\r\n  }\r\n\r\n  static getEnvironment(): string {\r\n    return DataVizUiEnvironmentManager.environment;\r\n  }\r\n\r\n  static setTenant(tenant: string): void {\r\n    DataVizUiEnvironmentManager.tenant = tenant;\r\n  }\r\n\r\n  static getTenant(): string {\r\n    return DataVizUiEnvironmentManager.tenant;\r\n  }\r\n}\r\n","import { DataVizUiEnvironmentManager } from './data-viz-ui-environment-manager';\r\n\r\nexport class AppConfig {\r\n\r\n  public static appEnvMapping: { [key: string]: string } = {\r\n    dev: 'dev',\r\n    snapshot: 'dev',\r\n    stable: 'stable',\r\n    production: 'production',\r\n  };\r\n\r\n  public static appEnvApiUrlMapping: { [key: string]: string } = {\r\n    dev: 'https://data-viz.dev.drg-understand.aws.clarivate.net/DatavizApiGateway/',\r\n    stable: 'https://data-viz.dev.drg-understand.aws.clarivate.net/DatavizApiGateway/',\r\n    production: 'https://data-viz.dev.drg-understand.aws.clarivate.net/DatavizApiGateway/',\r\n  };\r\n\r\n  public static appEnv = 'dev';\r\n\r\n  public static fetchAppEnv(): string {\r\n    this.appEnv = DataVizUiEnvironmentManager.getEnvironment();\r\n    return this.appEnvMapping[this.appEnv] || 'dev';\r\n  }\r\n\r\n  public static environmentFileConstant(): string {\r\n    return ['environment', this.fetchAppEnv(), 'json']\r\n      .filter(Boolean)\r\n      .join('.');\r\n  }\r\n\r\n  public static apiUrl(): string {\r\n    return this.appEnvApiUrlMapping[this.fetchAppEnv()];\r\n  }\r\n\r\n}\r\n","import { AppConfig } from '../config/app_config';\r\n\r\nexport class Config {\r\n  apiConfig: any;\r\n\r\n  constructor() {\r\n    this.setConfig();\r\n  }\r\n\r\n  setConfig(): void {\r\n    this.apiConfig = {\r\n      apiUrl: AppConfig.apiUrl(),\r\n      endPoints: {\r\n        login: 'login',\r\n        logout: 'logOut',\r\n        ping: 'ping',\r\n      },\r\n      token: 'jwt-token',\r\n    };\r\n  }\r\n\r\n  getConfig(): any {\r\n    return this.apiConfig;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport { Config } from './config';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { DataVizUiEnvironmentManager } from '../config/data-viz-ui-environment-manager';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n  apiConfig: any;\r\n  redirectUrl = '';\r\n  apiToken: any;\r\n\r\n  public isUserLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(\r\n    false\r\n  );\r\n\r\n  constructor() {\r\n    this.apiConfig = new Config().getConfig();\r\n  }\r\n\r\n  getTenantApiTokenKey(): string {\r\n    return [DataVizUiEnvironmentManager.getTenant(), 'api-token'].join('-');\r\n  }\r\n\r\n  getAuthorizationToken(): string | null {\r\n    return sessionStorage.getItem(this.getTenantApiTokenKey());\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return sessionStorage.getItem(this.getTenantApiTokenKey()) !== null;\r\n  }\r\n\r\n  setRedirectUrl(url: string): void {\r\n    this.redirectUrl = url;\r\n  }\r\n\r\n  getRedirectUrl(): string {\r\n    return this.redirectUrl || '';\r\n  }\r\n\r\n  getUserName(): string {\r\n    return localStorage.getItem('user-name') || '';\r\n  }\r\n\r\n  getUserEmail(): string {\r\n    const jwtToken = sessionStorage.getItem(this.getTenantApiTokenKey());\r\n    if (jwtToken) {\r\n      const decodedToken: any = jwt_decode(jwtToken);\r\n      return decodedToken['email'];\r\n    }\r\n    return '';\r\n  }\r\n\r\n  public getClientId(): string {\r\n    const jwtToken = sessionStorage.getItem(this.getTenantApiTokenKey());\r\n    if (jwtToken) {\r\n      const decodedToken: any = jwt_decode(jwtToken);\r\n      return decodedToken['clientId'];\r\n    }\r\n    return '';\r\n  }\r\n\r\n  parseUserRole(roles: string[]): string {\r\n    if (roles === null || roles === undefined || roles.length === 0) {\r\n      return '';\r\n    }\r\n    if (roles.some(role => role.toLowerCase() === 'distributor')) {\r\n      return 'DISTRIBUTOR';\r\n    } else if (roles.some(role => role.toLowerCase() === 'manufacturer')) {\r\n      return 'MANUFACTURER';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    return this.getUserRole() !== '' && this.getUserRole().toLowerCase() === 'admin';\r\n  }\r\n\r\n  public authenticate(token: any): void {\r\n    if (token) {\r\n      sessionStorage.setItem(this.getTenantApiTokenKey(), token);\r\n      this.isUserLoggedIn.next(true);\r\n    }\r\n  }\r\n\r\n  public getUserRole(): string {\r\n    const jwtToken = sessionStorage.getItem(this.getTenantApiTokenKey());\r\n    if (jwtToken) {\r\n      const decodedToken: any = jwt_decode(jwtToken);\r\n      return this.parseUserRole(decodedToken['roles']);\r\n    }\r\n    return '';\r\n  }\r\n\r\n  public getRoles(): any {\r\n    const jwtToken = sessionStorage.getItem(this.getTentantApiTokenKey());\r\n    if (jwtToken) {\r\n      const decodedToken: any = jwt_decode(jwtToken);\r\n      return decodedToken['roles'];\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getTentantApiTokenKey(): string {\r\n    return this.apiConfig.tenantId + '-api-token';\r\n  }\r\n\r\n  public login(): boolean {\r\n    this.signOut();\r\n    const url =\r\n      this.apiConfig.apiUrl +\r\n      this.apiConfig.endPoints.login +\r\n      '?tenantId=' + DataVizUiEnvironmentManager.getTenant() +\r\n      '&redirectTo=' +\r\n      this.getRedirectUrl();\r\n    this.redirect(url); // Redirect user to login page\r\n    // this.redirect('http://localhost:8080/HidaApiGateway/login?redirectTo=/dashboard');\r\n    return false;\r\n  }\r\n\r\n  public ping(): boolean {\r\n    this.signOut();\r\n    const url =\r\n      this.apiConfig.apiUrl +\r\n      this.apiConfig.endPoints.ping +\r\n      '?tenantId=' + DataVizUiEnvironmentManager.getTenant() +\r\n      '&redirectTo=' +\r\n      this.getRedirectUrl();\r\n    this.redirect(url); // Redirect user to ping endpoint\r\n    return false;\r\n  }\r\n\r\n  public logout(): boolean {\r\n    const url =\r\n      this.apiConfig.apiUrl +\r\n      this.apiConfig.endPoints.logout +\r\n      '?tenantId=' + DataVizUiEnvironmentManager.getTenant() +\r\n      '&api_token=' +\r\n      sessionStorage.getItem(this.getTenantApiTokenKey());\r\n    this.signOut();\r\n    this.redirect(url); // Redirect user to logout page\r\n    return false;\r\n  }\r\n\r\n  redirect(url: string): void {\r\n    window.location.replace(url);\r\n  }\r\n\r\n  signOut(): void {\r\n    sessionStorage.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AnalyticsStructuredEventsMapping } from '../config/analytics-structured-events-mapping';\r\nimport { AnalyticsService } from '@cdx/analytics';\r\nimport { AuthenticationService } from '../authentication/authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnowplowService {\r\n\r\n  constructor(\r\n    private analyticsService: AnalyticsService,\r\n    private authService: AuthenticationService\r\n  ) {\r\n  }\r\n\r\n  setUserId(): void {\r\n    const userId = this.authService.getUserEmail();\r\n    if (userId) {\r\n      // Since userId represents sensitive information - email, second parameter useHash is set to true\r\n      this.analyticsService.setUserId(userId, true);\r\n    }\r\n  }\r\n\r\n  setCustomerId(): void {\r\n\r\n  }\r\n\r\n  setAppSessionId(): void {\r\n    const userSessionId = this.authService.getAuthorizationToken();\r\n    if (userSessionId) {\r\n      this.analyticsService.setAppSessionId(userSessionId);\r\n    }\r\n  }\r\n\r\n  fetchStructuredEventCategory(category: string): string {\r\n    return AnalyticsStructuredEventsMapping.fetchCategory(category);\r\n  }\r\n\r\n  fetchStructuredEventAction(action: string): string {\r\n    return AnalyticsStructuredEventsMapping.fetchAction(action);\r\n  }\r\n\r\n  pageTracking(pageName: string): void {\r\n    this.analyticsService.trackPage(pageName);\r\n  }\r\n\r\n  eventTracking(\r\n    category: string,\r\n    action: string,\r\n    label?: string,\r\n    property?: string,\r\n    value?: string\r\n  ): void {\r\n    category = this.fetchStructuredEventCategory(category);\r\n    action = this.fetchStructuredEventAction(action);\r\n    if (label || property || value) {\r\n      this.analyticsService.trackEventFull(category, action, label, property, value);\r\n    } else {\r\n      this.analyticsService.trackEvent(category, action);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Config } from './../../authentication/config';\r\nimport { AppConfig } from '../../config/app_config';\r\nimport { ConfigService } from '../../config.service';\r\n@Injectable({ providedIn: 'root' })\r\nexport class VisualizationService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private apiConfig: Config,\r\n    private configService: ConfigService\r\n  ) { }\r\n\r\n  getEmbedToken(reportName: string): Observable<object>{\r\n    const apiUrl = this.apiConfig.getConfig().apiUrl;\r\n    return this.http\r\n      .get(apiUrl + this.getEmbedTokenUrl(reportName))\r\n      .pipe(\r\n        map((token) => {\r\n          catchError(this.handleError);\r\n          return token;\r\n        })\r\n      );\r\n  }\r\n\r\n  getEmbedTokenUrl(reportName: string): string {\r\n    console.log(AppConfig.fetchAppEnv());\r\n    console.log(reportName);\r\n    return 'api/embedtoken/v1/api/embedtoken?reportId='\r\n      + this.configService.config.bookmarks.envBasedReportIdsMap[AppConfig.fetchAppEnv()][reportName]\r\n      + this.getEmbedParams(reportName);\r\n  }\r\n\r\n  getEmbedParams(reportName: string): string {\r\n    const params = this.configService.config.bookmarks.embedUrlQueryParamsMap[reportName];\r\n    let url = '';\r\n    if (params) {\r\n      Object.keys(params).forEach(param => {\r\n        url = url + '&' + param + '=' + (params[param].encoded ? encodeURIComponent(params[param].value) : params[param].value);\r\n      });\r\n    }\r\n    return url;\r\n  }\r\n\r\n  handleError(error: any): Observable<never> {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side error\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    window.alert(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport * as models from 'powerbi-models';\r\n\r\nimport { VisualizationService } from './visualization.service';\r\n\r\nimport * as pbi from 'powerbi-client';\r\nimport { AuthenticationService } from './../../authentication/authentication.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { SnowplowService } from './../../snowplow/snowplow.service';\r\nimport { ConfigService } from './../../config.service';\r\nimport { PowerbiBookmark } from '../bookmarks/bookmarks.model';\r\n\r\n@Component({\r\n  selector: 'lib-visualization',\r\n  templateUrl: './visualization.component.html',\r\n  providers: [VisualizationService],\r\n})\r\nexport class VisualizationComponent implements OnInit, OnDestroy {\r\n  report: any;\r\n  unSubscribe = new Subject();\r\n  MINUTES_BEFORE_EXPIRATION = 10;\r\n  INTERVAL_TIME = 4; // In minutes\r\n  tokenExpiration = '';\r\n  powerbi: any;\r\n  reportsContainer: any;\r\n  @Output() save = new EventEmitter();\r\n  @Output() defaultView = new EventEmitter();\r\n  constructor(\r\n    private visualizationService: VisualizationService,\r\n    private authService: AuthenticationService,\r\n    private snowplowService: SnowplowService,\r\n    private configService: ConfigService\r\n  ) { }\r\n  ngOnInit(): void {\r\n    this.configService.getConfigObject().subscribe(config => {\r\n      this.getEmbedToken('new');\r\n    });\r\n    // Grab the reference to the div HTML element that will host the report.\r\n    this.reportsContainer = (\r\n      document.getElementById('reportsContainer')\r\n    ) as HTMLElement;\r\n\r\n    // Embed the report and display it within the div container.\r\n    this.powerbi = new pbi.service.Service(\r\n      pbi.factories.hpmFactory,\r\n      pbi.factories.wpmpFactory,\r\n      pbi.factories.routerFactory\r\n    );\r\n    this.powerbi.bootstrap(this.reportsContainer, {\r\n      type: 'report',\r\n      tokenType: models.TokenType.Embed,\r\n      uniqueId: 1,\r\n      embedUrl: '',\r\n      accessToken: '',\r\n      settings: {\r\n        navContentPaneEnabled: false,\r\n      },\r\n    });\r\n    setInterval(\r\n      () => this.checkTokenAndUpdate(),\r\n      this.INTERVAL_TIME * 60 * 1000\r\n    );\r\n    this.getEmbedToken('new');\r\n    // Track load dashboard event\r\n    this.snowplowService.eventTracking('load-dashboard', 'load', 'reportName', '', this.getReportName());\r\n  }\r\n\r\n  getReports(embedResponse: any): any {\r\n    const config = {\r\n      type: 'report',\r\n      tokenType: models.TokenType.Embed,\r\n      uniqueId: embedResponse.embedReports[0].reportId,\r\n      embedUrl: embedResponse.embedReports[0].embedUrl,\r\n      accessToken: embedResponse.embedToken.token,\r\n      settings: {\r\n        navContentPaneEnabled: false,\r\n      },\r\n    } as any;\r\n    this.report = this.powerbi.embed(this.reportsContainer, config);\r\n    // Report.off removes a given event handler if it exists.\r\n    this.report.off('loaded');\r\n    // this.report.on will add an event handler which prints to Log window.\r\n    this.report.on('loaded', (e: any) => {\r\n      this.getBookmarkState('defaultView');\r\n    });\r\n    this.report.on('pageChanged', (page: any) => {\r\n      // Track page changed event\r\n      this.snowplowService.eventTracking('page-changed', 'click', 'pageName', '', page.detail.newPage.displayName);\r\n    });\r\n    this.report.on('error', (event: any) => {\r\n      this.report.off('error');\r\n    });\r\n  }\r\n\r\n  getBookmarkState(type: string): Promise<PowerbiBookmark> {\r\n    const state = this.report.bookmarksManager.capture({\r\n      allPages: true,\r\n      personalizeVisuals: true,\r\n    });\r\n    // defaultView will be called only once on initial load of powerbi report\r\n    type === 'defaultView'\r\n      ? this.defaultView.emit(state)\r\n      : this.save.emit(state);\r\n    return state;\r\n  }\r\n\r\n  loadReport(bookmark: any, type: string): void {\r\n    // const state = bookmark.bookmarkState ? bookmark.bookmarkState : bookmark.state;\r\n    this.report.bookmarksManager\r\n      .applyState(bookmark.bookmarkState)\r\n      .then((appliedState: any) => {\r\n        this.report.getPages().then((pages: any) => {\r\n          this.report.setPage(pages[0].name);\r\n        });\r\n      });\r\n  }\r\n\r\n  getEmbedToken(type: string, taxonomy?: string): void {\r\n    const roles = this.configService.config.roles;\r\n    let reportName: string = roles ? this.getReportName() : '';\r\n    if (taxonomy) {\r\n      reportName = taxonomy;\r\n    }\r\n    this.visualizationService\r\n      .getEmbedToken(reportName)\r\n      .pipe(takeUntil(this.unSubscribe))\r\n      .subscribe((resp) => {\r\n        this.subscribeGetEmbedToken(resp, type);\r\n      });\r\n  }\r\n\r\n  subscribeGetEmbedToken(resp: any, type: string): void {\r\n    this.tokenExpiration = resp['embedToken'].expiration;\r\n    if (type === 'new') {\r\n      this.getReports(resp);\r\n    } else {\r\n      this.updateToken(resp);\r\n    }\r\n  }\r\n\r\n  getReportName(): string {\r\n    const reportNameRoleMapping: { [key: string]: string } = {\r\n      Distributor: 'DIST',\r\n      Manufacturer: 'MAN'\r\n    };\r\n    const role = this.configService.config.roles;\r\n    if (role && role[0] === 'Distributor') {\r\n      const reportName = localStorage.getItem('distributorTaxonomy');\r\n      if (reportName) {\r\n        return reportName;\r\n      } else {\r\n        localStorage.setItem('distributorTaxonomy', 'DIST');\r\n        return 'DIST';\r\n      }\r\n    }\r\n    return reportNameRoleMapping[role[0]] || '';\r\n  }\r\n\r\n  checkTokenAndUpdate(): void {\r\n    // Get the current time\r\n    const currentTime = Date.now();\r\n    const expiration = Date.parse(this.tokenExpiration);\r\n\r\n    // Time until token expiration in milliseconds\r\n    const timeUntilExpiration = expiration - currentTime;\r\n    const timeToUpdate = this.MINUTES_BEFORE_EXPIRATION * 60 * 1000;\r\n    // Update the token if it is about to expired\r\n    if (timeUntilExpiration <= timeToUpdate) {\r\n      this.getEmbedToken('update');\r\n    }\r\n  }\r\n\r\n  updateToken(resp: any): void {\r\n    // Set the new access token\r\n    this.report.setAccessToken(resp.embedToken.token);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unSubscribe.next();\r\n    this.unSubscribe.complete();\r\n  }\r\n}\r\n","<div id=\"reportsContainer\" style=\"width: 100%; height: 1000px;\"></div>\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export default {\r\n  sort(array: any[], orderType?: string, ascending?: boolean, key?: string): any[] {\r\n    return this.sortAlphabetically(array, ascending, key);\r\n  },\r\n\r\n  sortAlphabetically(array: any[], ascending?: boolean, key?: string): any[] {\r\n    array.sort((a, b) => {\r\n      const la = a.bookmarkName.toLowerCase();\r\n      const lb = b.bookmarkName.toLowerCase();\r\n      if (la > lb) {\r\n        return 1;\r\n      }\r\n      if (la < lb) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n    return ascending ? array : array.reverse();\r\n  },\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Config } from './../../authentication/config';\r\nimport { AuthenticationService } from './../../authentication/authentication.service';\r\nimport { ConfigService } from '../../config.service';\r\nimport { PowerbiBookmark } from '../visualization/visualization.model';\r\nimport { DataVizUiEnvironmentManager } from '../../config/data-viz-ui-environment-manager';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BookmarkService {\r\n  private apiUrl = this.apiConfig.getConfig().apiUrl;\r\n  private reportName: string;\r\n  private tenantId: string;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private apiConfig: Config,\r\n    private configService: ConfigService,\r\n    private authService: AuthenticationService\r\n  ) {\r\n    this.reportName = configService.config['roles'].\r\n      includes('Manufacturer') ? 'MAN' : 'DIST';\r\n    this.tenantId = DataVizUiEnvironmentManager.getTenant();\r\n  }\r\n\r\n  getBookmarks(reportName?: string): Observable<any[]> {\r\n    if (reportName) {\r\n      this.reportName = reportName;\r\n    }\r\n    return this.http\r\n      .get<any>(this.apiUrl + `api/bookmarks/v1/api/bookmarks?reportName=${this.reportName}&tenantId=${this.tenantId}`)\r\n      .pipe(\r\n        map((bookmarks) => {\r\n          return bookmarks;\r\n        }),\r\n        catchError((error) => throwError(error))\r\n      );\r\n  }\r\n  createBookmark(bookmark: PowerbiBookmark): Observable<any> {\r\n    const requestData = {} as any;\r\n    requestData.bookmarkName = bookmark.bookmarkName;\r\n    requestData.bookmarkState = bookmark.state;\r\n    requestData.reportName = this.reportName;\r\n    requestData.tenantId = this.tenantId;\r\n    return this.http\r\n      .post(this.apiUrl + 'api/bookmarks/v1/api/bookmarks', requestData)\r\n      .pipe(\r\n        map((data) => {\r\n          catchError(this.handleError);\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  updateBookmark(editedBookmark: PowerbiBookmark): Observable<any> {\r\n    const requestData = {} as any;\r\n    requestData.bookmarkName = editedBookmark.bookmarkName;\r\n    requestData.bookmarkState = editedBookmark.bookmarkState;\r\n    requestData.reportName = this.reportName;\r\n    requestData.tenantId = this.tenantId;\r\n    return this.http\r\n      .put(this.apiUrl + 'api/bookmarks/v1/api/bookmarks/' + editedBookmark.bookmarkId, requestData)\r\n      .pipe(\r\n        map((data) => {\r\n          catchError(this.handleError);\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  updateBookmarkName(editedBookmark: PowerbiBookmark, newName: string): Observable<any> {\r\n    const requestData = {} as any;\r\n    requestData.bookmarkName = newName;\r\n    requestData.bookmarkState = editedBookmark.bookmarkState;\r\n    requestData.reportName = this.reportName;\r\n    return this.http\r\n      .put(\r\n        this.apiUrl +\r\n        `api/bookmarks/v1/api/bookmarks/${editedBookmark.bookmarkId}`,\r\n        requestData\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          catchError(this.handleError);\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  deleteBookmark(bookmark: PowerbiBookmark): Observable<any> {\r\n    return this.http\r\n      .delete(\r\n        this.apiUrl + `api/bookmarks/v1/api/bookmarks/${bookmark.bookmarkId}`,\r\n        { responseType: 'text' }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          // catchError(this.handleError);\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  handleError(error: object): Observable<never> {\r\n    console.log(error);\r\n    let errorMessage = '';\r\n    if ((error as any).error instanceof ErrorEvent) {\r\n      // client-side error\r\n      errorMessage = `Error: ${(error as any).error.message}`;\r\n    } else {\r\n      // server-side error\r\n      errorMessage = `Error Code: ${(error as any).status}\\nMessage: ${(error as any).message}`;\r\n    }\r\n    window.alert(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { publish, refCount } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NotificationService {\r\n  private notificationSubject: BehaviorSubject<any> = new BehaviorSubject(null);\r\n  readonly notification$: Observable<any> = this.notificationSubject\r\n    .asObservable()\r\n    .pipe(publish(), refCount());\r\n\r\n  constructor() { }\r\n\r\n  notify(message: object): void {\r\n    this.notificationSubject.next(message);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"w-100 show col-xl-12 bookmark-dropdown\">\r\n    <div class=\"row\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn dropdown-btn dropdown-toggle col-xl-2 mt10\"\r\n        id=\"dropdownMenu\"\r\n        data-toggle=\"dropdown\"\r\n        aria-haspopup=\"true\"\r\n        [title]=\"selectedBookmark?.bookmarkName\"\r\n        aria-expanded=\"true\"\r\n      >\r\n        {{\r\n          selectedBookmark?.bookmarkName?.length! > 12\r\n            ? (selectedBookmark?.bookmarkName! | slice: 0:12) + \"...\"\r\n            : selectedBookmark?.bookmarkName!\r\n        }}\r\n      </button>\r\n      <div\r\n        appDropdownStatusListener\r\n        (close)=\"closeDropdown($event)\"\r\n        id=\"dropdownMenu\"\r\n        #modalOverlay\r\n        class=\"dropdown-menu col-xl-4\"\r\n        role=\"menu\"\r\n        aria-labelledby=\"dropdownMenu\"\r\n      >\r\n        <div class=\"list-group\">\r\n          <div\r\n            class=\"list-group-item custom-control custom-radio default-view\"\r\n            (click)=\"getDefaultView()\"\r\n          >\r\n            <input\r\n              type=\"radio\"\r\n              id=\"default\"\r\n              name=\"filterGroupRadios\"\r\n              class=\"custom-control-input\"\r\n              checked\r\n            />\r\n            <label class=\"custom-control-label\" for=\"default\"\r\n              >Default View</label\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"list-group\">\r\n          <h6>My Saved Criteria</h6>\r\n          <div>\r\n            <input\r\n              [formControl]=\"searchBookmark\"\r\n              (keyup)=\"onSearchBookmark($event)\"\r\n              placeholder=\"Search views\"\r\n              id=\"searchBookmark\"\r\n              name=\"searchBookmark\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              aria-describedby=\"searchBookmark\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"list-group-item custom-control custom-radio\"\r\n            *ngFor=\"let state of states\"\r\n            [title]=\"state.bookmarkName\"\r\n          >\r\n            <input\r\n              type=\"radio\"\r\n              id=\"{{ state.bookmarkName }}\"\r\n              [checked]=\"state.bookmarkName === selectedBookmark.bookmarkName\"\r\n              name=\"filterGroupRadios\"\r\n              class=\"custom-control-input\"\r\n              (change)=\"onBookmarkSelect($event, state)\"\r\n            />\r\n            <label class=\"custom-control-label\" for=\"{{ state.bookmarkName }}\">\r\n              {{\r\n                state?.bookmarkName?.length! > 24\r\n                  ? (state?.bookmarkName! | slice: 0:24) + \"...\"\r\n                  : state?.bookmarkName!\r\n              }}\r\n            </label>\r\n            <span class=\"pull-right\">\r\n              <a\r\n                [routerLink]=\"\"\r\n                title=\"Edit\"\r\n                (click)=\"editBookmark(state)\"\r\n                [attr.tabindex]=\"\r\n                  state.bookmarkName === selectedBookmark.bookmarkName ? 0 : -1\r\n                \"\r\n              >\r\n                <em\r\n                  class=\"fa fa-edit\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#exampleModalCenter\"\r\n                ></em> </a\r\n              >|\r\n              <a\r\n                [routerLink]=\"\"\r\n                title=\"Delete\"\r\n                (click)=\"deleteBookmark(state)\"\r\n                [attr.tabindex]=\"\r\n                  state.bookmarkName === selectedBookmark.bookmarkName ? 0 : -1\r\n                \"\r\n              >\r\n                <em\r\n                  class=\"fa fa-trash\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#deleteBookmark\"\r\n                ></em>\r\n              </a>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-success mt10 save-view\"\r\n        data-toggle=\"modal\"\r\n        data-target=\"#exampleModalCenter\"\r\n        #saveButton\r\n      >\r\n        Save View As\r\n      </button>\r\n      <button\r\n        [disabled]=\"selectedBookmark.bookmarkName === 'Default View'\"\r\n        type=\"button\"\r\n        class=\"btn btn-secondary mt10 save-view\"\r\n        data-toggle=\"modal\"\r\n        data-target=\"#updateBookmark\"\r\n      >\r\n        Update View\r\n      </button>\r\n    </div>\r\n    <!-- Save bookmark related modal -->\r\n    <div\r\n      class=\"modal fade\"\r\n      id=\"exampleModalCenter\"\r\n      #bookmarkModal\r\n      aria-modal=\"true\"\r\n      role=\"dialog\"\r\n    >\r\n      <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content bookmark-modal\">\r\n          <form\r\n            name=\"bookmarkForm\"\r\n            [formGroup]=\"bookmarkForm\"\r\n            (ngSubmit)=\"saveBookmark($event)\"\r\n          >\r\n            <div class=\"modal-header\">\r\n              <span class=\"modal-title\" id=\"exampleModalCenterTitle\"\r\n                >Save current view</span\r\n              >\r\n              <button\r\n                type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n                (click)=\"closeModal()\"\r\n                #closeButton\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"divider\"></div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">View name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  #name\r\n                  (keyup)=\"onBookmarkNameChange(name.value)\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"bookmarkName\"\r\n                  id=\"exampleInputEmail1\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  [placeholder]\r\n                />\r\n              </div>\r\n              <span\r\n                class=\"text-error\"\r\n                *ngIf=\"bookmarkForm.dirty && !bookmarkForm.valid\"\r\n                >Please enter name containing alphabets, numbers and special\r\n                characters .*-/'. Length should between 3 and 140\r\n                characters!</span\r\n              >\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n                (click)=\"closeModal()\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                [disabled]=\"bookmarkForm.invalid || isDuplicate\"\r\n                class=\"btn btn-primary\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"modal fade\"\r\n    id=\"deleteBookmark\"\r\n    #bookmarkModal\r\n    aria-modal=\"true\"\r\n    role=\"dialog\"\r\n  >\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\">Delete View</h5>\r\n          <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            #deleteButton\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">Are you sure you want to delete this view?</div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            (click)=\"confirmDeleteBookmark()\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"modal fade\"\r\n    id=\"updateBookmark\"\r\n    #bookmarkModal\r\n    aria-modal=\"true\"\r\n    role=\"dialog\"\r\n  >\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"updateBookmark\">Update View</h5>\r\n          <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            #updateButton\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">Are you sure you want to update this view?</div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            (click)=\"updateBookmark()\"\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  AfterContentInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\n\r\nimport { PowerbiBookmark } from './../../components/bookmarks/bookmarks.model';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { BookmarkService } from './bookmarks.service';\r\nimport { VisualizationComponent } from './../visualization/visualization.component';\r\nimport { NotificationService } from './../../common/core/notification.service';\r\nimport * as arrayApis from './../../common/useful-apis/array-apis';\r\nimport { Subject, throwError } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { SnowplowService } from './../../snowplow/snowplow.service';\r\nimport { ConfigService } from './../../config.service';\r\nimport { DataVizUiService } from './../../data-viz-ui.service';\r\n\r\n@Component({\r\n  selector: 'lib-bookmarks',\r\n  templateUrl: './bookmarks.component.html',\r\n  styleUrls: ['./bookmarks.component.scss']\r\n})\r\nexport class BookmarksComponent implements OnInit, OnDestroy, AfterContentInit {\r\n  selectedBookmark: PowerbiBookmark = { bookmarkName: 'Default View' } as PowerbiBookmark;\r\n  searchBookmark: any;\r\n  title = 'data-viz-ui';\r\n  allBookmarks: PowerbiBookmark[] = [] as PowerbiBookmark[];\r\n  defaultViewBookmark: any;\r\n  currentState: PowerbiBookmark = {} as PowerbiBookmark;\r\n  editedBookmark: PowerbiBookmark = {} as PowerbiBookmark;\r\n  currentDeleteBookmark: any;\r\n  bookmarkForm: any;\r\n  isModalOpen = false;\r\n  duplicateBookmark: PowerbiBookmark = {} as PowerbiBookmark;\r\n  isDuplicate: any;\r\n  areFiltersChanged = false;\r\n  user: any;\r\n  routedElement: any;\r\n  states: PowerbiBookmark[] = [];\r\n  showSettings = false;\r\n  unSubscribe = new Subject();\r\n  HIDE_SETTINGS_FOR_CLIENT_IDS = ['5'];\r\n  @ViewChild('closeButton') closeButton = {} as any;\r\n  @ViewChild('saveButton') saveButton = {} as any;\r\n  @ViewChild('deleteButton') deleteButton = {} as any;\r\n  @ViewChild('updateButton') updateButton = {} as any;\r\n  @ViewChild('modalOverlay') modalOverlay: ElementRef = {} as any;\r\n  // @Input() states: PowerbiBookmark[];\r\n  @Input() visualElem: VisualizationComponent = {} as any;\r\n  @Output() save = new EventEmitter();\r\n\r\n  constructor(\r\n    private bookmarkService: BookmarkService,\r\n    private notifier: NotificationService,\r\n    private snowplowService: SnowplowService,\r\n    private configService: ConfigService,\r\n    public dvService: DataVizUiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.configService.getConfigObject().subscribe(config => {\r\n      this.getBookmarks();\r\n      // TODO: need to verify\r\n      this.snowplowService.eventTracking('load-bookmarks', 'load');\r\n    });\r\n\r\n    this.dvService.getTaxonomy().subscribe((distributorTaxonomy: string) => {\r\n      this.onTaxonomyChange(distributorTaxonomy);\r\n    });\r\n    this.searchBookmark = new FormControl('');\r\n    this.states = [];\r\n    this.bookmarkForm = new FormGroup({\r\n      bookmarkName: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern('[a-zA-Z0-9.*\\'/ -]*'),\r\n        Validators.minLength(3),\r\n        Validators.maxLength(140),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.getBookmarks();\r\n    setTimeout(() => {\r\n      // As first click of dropdown not working .... hint: bootstrap module loaded twice\r\n      const dropdownBtn = document.getElementsByClassName(\r\n        'dropdown-btn'\r\n      )[0] as HTMLElement;\r\n      dropdownBtn.click();\r\n      dropdownBtn.blur();\r\n      this.visualElem.defaultView.subscribe((value) => {\r\n        value.then((bookmark: PowerbiBookmark) => {\r\n          this.defaultViewBookmark = bookmark;\r\n          this.defaultViewBookmark.bookmarkState = bookmark.state;\r\n          this.getDefaultView();\r\n        })\r\n          .catch((error: object) => {\r\n            throwError(error);\r\n          });\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  getBookmarks(reportName?: string): void {\r\n    console.log('getBookmarks called');\r\n    this.bookmarkService\r\n      .getBookmarks(reportName)\r\n      .pipe(takeUntil(this.unSubscribe))\r\n      .subscribe((bookmarks: PowerbiBookmark[]) => {\r\n        this.sortBookmarks(bookmarks);\r\n      });\r\n  }\r\n\r\n  sortBookmarks(bookmarks: PowerbiBookmark[]): void {\r\n    if (bookmarks) {\r\n      bookmarks = arrayApis.default.sort(bookmarks, 'alphabetic', true);\r\n      this.states = bookmarks;\r\n      this.allBookmarks = bookmarks;\r\n    }\r\n  }\r\n\r\n  closeDropdown(event: object): void {\r\n    this.resetDropdown();\r\n  }\r\n\r\n  onClick(event: Event): void {\r\n    if (this.modalOverlay && !this.modalOverlay.nativeElement.contains(event.target)) {\r\n      this.resetDropdown();\r\n    }\r\n  }\r\n\r\n  onTaxonomyChange(reportName: string): void {\r\n    this.visualElem.getEmbedToken('new', reportName);\r\n    this.getBookmarks(reportName);\r\n    localStorage.setItem('distributorTaxonomy', reportName);\r\n  }\r\n\r\n  onBookmarkSelect(event: any, state: PowerbiBookmark): void {\r\n    if (state) {\r\n      this.selectedBookmark = state;\r\n    }\r\n    this.areFiltersChanged = false;\r\n    this.resetDropdown();\r\n    this.visualElem.loadReport(state, 'custom');\r\n    // TODO: need to verify\r\n    this.snowplowService.eventTracking('select-bookmarks', 'click', 'Selected Bookmark Name', '', state.bookmarkName);\r\n\r\n  }\r\n\r\n  onSearchBookmark(event: Event): void {\r\n    const allBookmarks = JSON.parse(JSON.stringify(this.allBookmarks));\r\n    const searchValue = this.searchBookmark.value.toLowerCase();\r\n    if (searchValue !== '') {\r\n      this.states = allBookmarks.filter((bookmark: PowerbiBookmark) =>\r\n        bookmark.bookmarkName.toLowerCase().includes(searchValue)\r\n      );\r\n    } else {\r\n      this.states = this.allBookmarks;\r\n    }\r\n  }\r\n\r\n  onBookmarkNameChange(name: string): void {\r\n    this.isDuplicate = name.trim() === this.duplicateBookmark?.bookmarkName;\r\n  }\r\n\r\n  saveBookmark(data: any): void {\r\n    if (!this.editedBookmark) {\r\n      this.createBookmark();\r\n    } else {\r\n      this.updateBookmarkName();\r\n    }\r\n  }\r\n\r\n  createBookmark(): void {\r\n    const bookmarkName = this.bookmarkForm.controls.bookmarkName.value;\r\n    const duplicate = this.allBookmarks.find(\r\n      (bookmark) => bookmark.bookmarkName === bookmarkName\r\n    );\r\n    if (duplicate) {\r\n      this.duplicateBookmark = duplicate;\r\n    }\r\n    if (this.duplicateBookmark) {\r\n      this.isDuplicate = true;\r\n      return this.notifier.notify({\r\n        message: 'Failed to save view. A view with same name already exists!',\r\n        statusCode: 400,\r\n      });\r\n    }\r\n    this.visualElem.getBookmarkState('save').then((state: PowerbiBookmark) => {\r\n      this.currentState = state;\r\n      this.currentState.bookmarkName = bookmarkName;\r\n      this.closeButton.nativeElement.click();\r\n      this.bookmarkForm.controls.bookmarkName.setValue('');\r\n      this.bookmarkService\r\n        .createBookmark(this.currentState)\r\n        .pipe(takeUntil(this.unSubscribe))\r\n        .subscribe((bookmark: PowerbiBookmark) => {\r\n          this.subscribeCreateBookmark(bookmark);\r\n        });\r\n      // Track create bookmark event\r\n      this.snowplowService.eventTracking('create-bookmark', 'click', 'bookmarkName', '', bookmarkName);\r\n    });\r\n  }\r\n\r\n  subscribeCreateBookmark(bookmark: PowerbiBookmark): void {\r\n    this.states = arrayApis.default.sort(this.states, 'alphabetic', true);\r\n    this.states.unshift(bookmark);\r\n    this.states = [...this.states];\r\n    this.allBookmarks = [...this.states];\r\n    if (bookmark) {\r\n      this.selectedBookmark = bookmark;\r\n    }\r\n  }\r\n\r\n  updateBookmark(): void {\r\n    this.visualElem.getBookmarkState('save').then((bookmark: PowerbiBookmark) => {\r\n      this.currentState = JSON.parse(JSON.stringify(this.selectedBookmark));\r\n      if (bookmark.state) {\r\n        this.currentState.bookmarkState = bookmark.state;\r\n      }\r\n      this.bookmarkService\r\n        .updateBookmark(this.currentState)\r\n        .pipe(takeUntil(this.unSubscribe))\r\n        .subscribe((bookmarkResp: PowerbiBookmark) => {\r\n          this.subscribeUpdateBookmark(bookmarkResp);\r\n        });\r\n    });\r\n    // Track update bookmark event\r\n    this.snowplowService.eventTracking('update-bookmark', 'click', 'bookmarkName', '', this.selectedBookmark.bookmarkName);\r\n  }\r\n\r\n  subscribeUpdateBookmark(bookmark: PowerbiBookmark): void {\r\n    const selectedBookmark = this.allBookmarks.find(bkmk => bkmk.bookmarkName === this.selectedBookmark.bookmarkName);\r\n    if (selectedBookmark) {\r\n      selectedBookmark.bookmarkState = bookmark.bookmarkState;\r\n    }\r\n    this.states = this.allBookmarks;\r\n    this.updateButton.nativeElement.click();\r\n  }\r\n\r\n  updateBookmarkName(): void {\r\n    const name = this.bookmarkForm.controls.bookmarkName.value;\r\n    const duplicate = this.allBookmarks.find(\r\n      (bookmark) => bookmark.bookmarkName === name\r\n    );\r\n    if (duplicate) {\r\n      this.duplicateBookmark = duplicate;\r\n    }\r\n    if (this.duplicateBookmark) {\r\n      this.isDuplicate = true;\r\n      return this.notifier.notify({\r\n        message: 'Failed to update view. A view with same name exists!',\r\n        statusCode: 400,\r\n      });\r\n    }\r\n    const reqObj = JSON.parse(JSON.stringify(this.editedBookmark));\r\n    reqObj.bookmarkName = name;\r\n    this.bookmarkService\r\n      .updateBookmark(reqObj)\r\n      .pipe(takeUntil(this.unSubscribe))\r\n      .subscribe((bookmark: PowerbiBookmark) => {\r\n        this.subscribeUpdateBookmarkName(bookmark, name);\r\n      });\r\n    // Track update bookmark event\r\n    this.snowplowService.eventTracking('update-bookmark', 'click', 'bookmarkName', '', reqObj.bookmarkName);\r\n  }\r\n\r\n  subscribeUpdateBookmarkName(bookmark: PowerbiBookmark, updateName: string): void {\r\n    if (\r\n      this.editedBookmark.bookmarkName ===\r\n      this.selectedBookmark.bookmarkName\r\n    ) {\r\n      this.selectedBookmark.bookmarkName = updateName;\r\n    }\r\n    const editedBookmark = this.allBookmarks.find(bkmk => bkmk.bookmarkName === this.editedBookmark.bookmarkName);\r\n    if (editedBookmark) {\r\n      editedBookmark.bookmarkName = updateName;\r\n    }\r\n    this.states = this.allBookmarks;\r\n    this.closeButton.nativeElement.click();\r\n    this.bookmarkForm.controls.bookmarkName.setValue('');\r\n  }\r\n\r\n  editBookmark(bookmark: PowerbiBookmark): void {\r\n    if (this.bookmarkForm && this.bookmarkForm.controls) {\r\n      this.bookmarkForm.controls.bookmarkName.setValue(bookmark.bookmarkName);\r\n      this.editedBookmark = bookmark;\r\n    }\r\n  }\r\n\r\n  deleteBookmark(bookmark: PowerbiBookmark): void {\r\n    this.currentDeleteBookmark = bookmark;\r\n  }\r\n  confirmDeleteBookmark(): void {\r\n    this.deleteButton.nativeElement.click();\r\n    this.bookmarkService\r\n      .deleteBookmark(this.currentDeleteBookmark)\r\n      .pipe(takeUntil(this.unSubscribe))\r\n      .subscribe((bookmarkName: any) => {\r\n        this.subscribeConfirmDeleteBookmark();\r\n      });\r\n    // Track delete bookmark event\r\n    this.snowplowService.eventTracking('delete-bookmark', 'click', 'bookmarkName', '', this.selectedBookmark.bookmarkName);\r\n  }\r\n\r\n  subscribeConfirmDeleteBookmark(): void {\r\n    if (\r\n      this.currentDeleteBookmark.bookmarkName ===\r\n      this.selectedBookmark.bookmarkName\r\n    ) {\r\n      this.getDefaultView();\r\n    }\r\n    const states = this.states.filter(\r\n      (bookmark) =>\r\n        bookmark.bookmarkName !== this.currentDeleteBookmark.bookmarkName\r\n    );\r\n    this.states = states;\r\n    this.allBookmarks = states;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.editedBookmark = undefined as any;\r\n    this.bookmarkForm.reset();\r\n  }\r\n\r\n  resetDropdown(): void {\r\n    const dropdown = document.getElementsByClassName('dropdown-menu')[0];\r\n    dropdown.classList.add('show');\r\n    this.modalOverlay.nativeElement.scrollTop = 0;\r\n    dropdown.classList.remove('show');\r\n    this.searchBookmark.setValue('');\r\n    this.states = this.allBookmarks;\r\n  }\r\n\r\n  getDefaultView(): void {\r\n    this.selectedBookmark = { bookmarkName: 'Default View' } as PowerbiBookmark;\r\n    this.areFiltersChanged = false;\r\n    this.visualElem.loadReport(this.defaultViewBookmark, 'default');\r\n    const defaultView = document.querySelector('#default') as HTMLInputElement;\r\n    defaultView.checked = true;\r\n  }\r\n\r\n  saveView(): void { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unSubscribe.next();\r\n    this.unSubscribe.complete();\r\n  }\r\n}\r\n","<div class=\"header-container\">\r\n  <div class=\"bookmarks-container\" *ngIf=\"configService.config.bookmarks\">\r\n    <lib-bookmarks [visualElem]=\"visual\"></lib-bookmarks>\r\n  </div>\r\n  <div class=\"ui-elements-container\">\r\n    <div\r\n      *ngFor=\"let divId of configService.config.uiElements\"\r\n      [id]=\"divId\"\r\n      class=\"right\"\r\n    ></div>\r\n  </div>\r\n</div>\r\n","import {\r\n  AfterContentInit,\r\n  Component,\r\n  Input,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ConfigService } from '../../config.service';\r\nimport { VisualizationComponent } from '../visualization/visualization.component';\r\n\r\n@Component({\r\n  selector: 'lib-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit, AfterContentInit {\r\n  @Input() visual: VisualizationComponent = {} as any;\r\n\r\n  constructor(\r\n    public configService: ConfigService\r\n  ) { }\r\n\r\n  uiElementsListing(): string[] {\r\n    return this.configService.config.uiElements;\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  ngAfterContentInit(): void {\r\n    setTimeout(() => {\r\n      const elements = this.configService.config.uiElements;\r\n      this.appendElements(elements);\r\n    }, 10);\r\n  }\r\n\r\n  appendElements(elements: string[]): void {\r\n    elements.forEach((elementName: string) => {\r\n      const elementContainer = document.querySelector('#' + elementName) as HTMLElement;\r\n      const elementHtml = document.querySelector(elementName) as HTMLElement;\r\n      if (elementContainer && elementHtml) {\r\n        elementContainer.appendChild(elementHtml);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"app-container\">\r\n  <lib-header\r\n    *ngIf=\"this.configService.config.modules.header\"\r\n    [visual]=\"visual\"\r\n  ></lib-header>\r\n  <lib-visualization #visual></lib-visualization>\r\n</div>\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { ConfigService } from './config.service';\r\nimport { SnowplowService } from './snowplow/snowplow.service';\r\n\r\n@Component({\r\n  selector: 'lib-data-viz-ui',\r\n  templateUrl: './data-viz-ui.component.html',\r\n  styleUrls: [],\r\n})\r\nexport class DataVizUiComponent implements OnInit, OnChanges {\r\n\r\n  @Input() modules: object = {\r\n    header: true,\r\n    bookmarks: true,\r\n  };\r\n  @Input() bookmarks: object = {\r\n  };\r\n  @Input() uiElements: string[] = [];\r\n  @Input() roles: string[] = [];\r\n\r\n  constructor(\r\n    public configService: ConfigService,\r\n    private snowplowService: SnowplowService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Set userId in Snowplow\r\n    this.snowplowService.setUserId();\r\n    // Set appSessionId\r\n    this.snowplowService.setAppSessionId();\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    Object.keys(changes).forEach(key => {\r\n      changes[key] = changes[key].currentValue;\r\n    });\r\n    this.configService.updateValues(changes);\r\n  }\r\n}\r\n","import { AnalyticsEnvironment, ANALYTICS_ENVIRONMENT } from '@cdx/analytics';\r\nimport { AppConfig } from './app_config';\r\n\r\nexport class AnalyticsConfig {\r\n\r\n  public static SNOWPLOW_ENVIRONMENTS_MAPPING: { [key: string]: string } = {\r\n    dev: 'SNAPSHOT',\r\n    qa: 'STABLE',\r\n    prod: 'PROD',\r\n  };\r\n  public static SNOWPLOW_PARAMS = {\r\n    appId: 'DATAVIZ',\r\n    options: {\r\n      snowplowEnvironmentProvider: {\r\n        provide: ANALYTICS_ENVIRONMENT,\r\n        useFactory: getEnvironment,\r\n      },\r\n      tracking: {\r\n        inferred: false,\r\n        pageViews: true\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport function getEnvironment(): AnalyticsEnvironment {\r\n  const snowplowEnvironment = AnalyticsConfig.SNOWPLOW_ENVIRONMENTS_MAPPING[AppConfig.fetchAppEnv()] || 'SNAPSHOT';\r\n  return snowplowEnvironment as AnalyticsEnvironment;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from './../authentication.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SnowplowService } from '../../snowplow/snowplow.service';\r\n\r\n@Component({\r\n  selector: 'lib-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private snowplowService: SnowplowService\r\n  ) { }\r\n\r\n  login(): void {\r\n    this.authService.login();\r\n  }\r\n\r\n  consume(apiToken: any): void {\r\n    const redirect = this.authService.redirectUrl\r\n      ? this.authService.redirectUrl\r\n      : '';\r\n    this.authService.authenticate(apiToken);\r\n    this.authService.getUserRole();\r\n    this.router.navigate([redirect]);\r\n    this.trackLogin();\r\n  }\r\n\r\n  consumePing(apiToken: any): void {\r\n    const redirect = this.authService.redirectUrl\r\n      ? this.authService.redirectUrl\r\n      : '';\r\n    this.authService.authenticate(apiToken);\r\n    this.authService.getUserRole();\r\n    this.router.navigate([redirect]);\r\n  }\r\n\r\n  trackLogin(): void {\r\n    if (this.authService.isAuthenticated()) {\r\n      this.router.navigate(['']);\r\n      this.snowplowService.eventTracking('login', 'click');\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n  }\r\n\r\n  validRoute(): string {\r\n    if (this.route && this.route.snapshot && this.route.snapshot.routeConfig && this.route.snapshot.routeConfig.path) {\r\n      return this.route.snapshot.routeConfig.path;\r\n    }\r\n    return '/';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const routePath = this.validRoute();\r\n    if (routePath.indexOf('ping-login') > -1) {\r\n      this.ping();\r\n    } else if (routePath.indexOf('login') > -1) {\r\n      this.login();\r\n    } else if (routePath.indexOf('consumePing') > -1) {\r\n      const consumeToken = this.route.snapshot.queryParams['api_token'];\r\n      this.authService.redirectUrl = this.route.snapshot.queryParams[\r\n        'redirectTo'\r\n      ];\r\n      this.consumePing(consumeToken);\r\n    } else if (routePath.indexOf('consume') > -1) {\r\n      const consumeToken = this.route.snapshot.queryParams['api_token'];\r\n      this.authService.redirectUrl = this.route.snapshot.queryParams[\r\n        'redirectTo'\r\n      ];\r\n      this.consume(consumeToken);\r\n    } else if (routePath.indexOf('logout') > -1) {\r\n      this.logout();\r\n      this.snowplowService.eventTracking('logout', 'click');\r\n    }\r\n  }\r\n\r\n  ping(): void {\r\n    this.authService.ping();\r\n  }\r\n}\r\n","<h4>You are being redirected to the Log In page</h4>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n  HttpHandler,\r\n} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, finalize } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from './authentication.service';\r\n// import { MessageService } from '../services/message.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private router: Router,\r\n  ) { }\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    let token = this.authService.getAuthorizationToken()\r\n      ? this.authService.getAuthorizationToken()\r\n      : '';\r\n    token = 'Bearer ' + token;\r\n    const headers = req.headers.set('Authorization', token);\r\n    req = req.clone({ headers });\r\n\r\n    return next.handle(req).pipe(\r\n      tap(\r\n        (event: HttpEvent<any>) => {\r\n          if (event instanceof HttpResponse) {\r\n            // Do something after success\r\n          }\r\n        },\r\n        (err: HttpEvent<any>) => {\r\n          if (err instanceof HttpErrorResponse) {\r\n            if (err.status === 401) {\r\n              // redirect to login\r\n              this.router.navigate(['login']);\r\n            } else if (err.status === 419) {\r\n              // redirect to logout\r\n              this.router.navigate(['logout']);\r\n            } else {\r\n              // this.messageService.addErrorMessage(err.status.toString());\r\n            }\r\n          }\r\n        }\r\n      ),\r\n      finalize(() => { })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { DataVizUiService } from './../data-viz-ui.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticationGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private dataVizUiService: DataVizUiService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.checkLogin(state.url);\r\n  }\r\n\r\n  checkLogin(url: string): boolean {\r\n    if (this.authService.isAuthenticated()) {\r\n      // const userRole = this.authService.getUserRole();\r\n      // if (userRole !== 'MANUFACTURER' && userRole !== 'DISTRIBUTOR') {\r\n      //   this.router.navigate(['/unauthorized']);\r\n      // }\r\n      this.dataVizUiService.rolesObject$.next(this.authService.getUserRole());\r\n      return true;\r\n    }\r\n\r\n    // Store the attempted URL for redirecting\r\n    this.authService.setRedirectUrl(url);\r\n\r\n    // Navigate to the login or ping page with extras\r\n    url.includes('ping')\r\n      ? this.router.navigate(['/ping-login'])\r\n      : this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-unauthorized',\r\n  templateUrl: './unauthorized.component.html',\r\n  styleUrls: ['./unauthorized.component.scss'],\r\n})\r\nexport class UnauthorizedComponent implements OnInit {\r\n  // ToDo - To be pulled from configuration\r\n  mailTo = '';\r\n  mailSubject = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  sendEmail(): void {\r\n    document.location.href =\r\n      'mailto:' +\r\n      this.mailTo +\r\n      '?subject=' +\r\n      this.mailSubject;\r\n  }\r\n}\r\n","<h4 *ngIf=\"isSuccess\">Successful Ping</h4>\r\n","<div class=\"auth-main\">\r\n  <div class=\"img-wrapper\">\r\n    <img\r\n      class=\"img-responsive\"\r\n      src=\"./../../../../assets/images/subscription-header.png\"\r\n      alt=\"Subscriptions\"\r\n      width=\"100%\"\r\n    />\r\n    <div class=\"img-overlay\">\r\n      <button class=\"btn btn-success\" (click)=\"sendEmail()\">Contact us</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"instructions\">\r\n    <section>\r\n      <span class=\"main-header\"\r\n        >Get started tracking sales performance and pricing in the medical\r\n        supply distribution channel across:\r\n      </span>\r\n      <p></p>\r\n    </section>\r\n    <ul>\r\n      <section>\r\n        <li class=\"header\">Product SKU</li>\r\n        <p></p>\r\n      </section>\r\n      <section>\r\n        <li class=\"header\">ZIP 3 geography</li>\r\n        <p></p>\r\n      </section>\r\n      <section>\r\n        <li class=\"header\">UNSPSC Product Category</li>\r\n        <p></p>\r\n      </section>\r\n      <section>\r\n        <li class=\"header\">Manufacturer</li>\r\n        <p></p>\r\n      </section>\r\n      <section>\r\n        <li class=\"header\">\r\n          Class-of-Trade (Hospital, ASC, Lab/Diagnostic, Physician Office,\r\n          Treatment Center, Long-Term Care, Home Care, Retail/Consumer)\r\n        </li>\r\n        <p></p>\r\n      </section>\r\n    </ul>\r\n  </div>\r\n  <div class=\"divider\"></div>\r\n  <button class=\"btn btn-success\" (click)=\"sendEmail()\">Contact us</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from './../authentication.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'lib-ping',\r\n  templateUrl: './ping.component.html',\r\n})\r\nexport class PingComponent implements OnInit {\r\n  isSuccess = true;\r\n\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  login(): void { }\r\n\r\n  ngOnInit(): void {\r\n    this.isSuccess = true;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from '../lib/authentication/login/login.component';\r\nimport { AuthenticationGuard } from '../lib/authentication/authentication.guard';\r\nimport { UnauthorizedComponent } from '../lib/authentication/unauthorized/unauthorized.component';\r\nimport { PingComponent } from '../lib/authentication/ping/ping.component';\r\n\r\nexport const DATA_VIZ_ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    canActivate: [AuthenticationGuard],\r\n    children: [\r\n      { path: '', redirectTo: '/', pathMatch: 'full' },\r\n    ],\r\n  },\r\n  { path: 'unauthorized', component: UnauthorizedComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'consume', component: LoginComponent },\r\n  { path: 'logout', component: LoginComponent },\r\n  {\r\n    path: 'ping',\r\n    component: PingComponent,\r\n    canActivate: [AuthenticationGuard],\r\n  },\r\n  { path: 'ping-login', component: LoginComponent },\r\n  { path: 'consumePing', component: LoginComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(DATA_VIZ_ROUTES)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DataVizUiRoutingModule {\r\n  public static getRoutes(): Routes {\r\n    return DATA_VIZ_ROUTES;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DataVizUiComponent } from './data-viz-ui.component';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { BookmarksComponent } from './components/bookmarks/bookmarks.component';\r\nimport { VisualizationComponent } from './components/visualization/visualization.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Config } from './authentication/config';\r\nimport { AnalyticsModule, AnalyticsService } from '@cdx/analytics';\r\nimport { AnalyticsConfig } from './config/analytics-config';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { TokenInterceptor } from './authentication/token-interceptor';\r\nimport { DataVizUiService } from './data-viz-ui.service';\r\nimport { DataVizUiRoutingModule } from './data-viz-ui-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DataVizUiComponent,\r\n    HeaderComponent,\r\n    BookmarksComponent,\r\n    VisualizationComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    HttpClientModule,\r\n    DataVizUiRoutingModule,\r\n    AnalyticsModule.forRoot(AnalyticsConfig.SNOWPLOW_PARAMS)\r\n  ],\r\n  providers: [\r\n    Config,\r\n    AnalyticsService,\r\n    DataVizUiService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n  ],\r\n  exports: [\r\n    DataVizUiComponent,\r\n  ]\r\n})\r\nexport class DataVizUiModule { }\r\n"]}