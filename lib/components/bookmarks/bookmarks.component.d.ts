import { AfterContentInit, ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { PowerbiBookmark } from './../../components/bookmarks/bookmarks.model';
import { BookmarkService } from './bookmarks.service';
import { VisualizationComponent } from './../visualization/visualization.component';
import { NotificationService } from './../../common/core/notification.service';
import { Subject } from 'rxjs';
import { SnowplowService } from './../../snowplow/snowplow.service';
import { ConfigService } from './../../config.service';
import { DataVizUiService } from './../../data-viz-ui.service';
import * as i0 from "@angular/core";
export declare class BookmarksComponent implements OnInit, OnDestroy, AfterContentInit {
    private bookmarkService;
    private notifier;
    private snowplowService;
    private configService;
    dvService: DataVizUiService;
    selectedBookmark: PowerbiBookmark;
    searchBookmark: any;
    title: string;
    allBookmarks: PowerbiBookmark[];
    defaultViewBookmark: any;
    currentState: PowerbiBookmark;
    editedBookmark: PowerbiBookmark;
    currentDeleteBookmark: any;
    bookmarkForm: any;
    isModalOpen: boolean;
    duplicateBookmark: PowerbiBookmark;
    isDuplicate: any;
    areFiltersChanged: boolean;
    user: any;
    routedElement: any;
    states: PowerbiBookmark[];
    showSettings: boolean;
    unSubscribe: Subject<unknown>;
    HIDE_SETTINGS_FOR_CLIENT_IDS: string[];
    closeButton: any;
    saveButton: any;
    deleteButton: any;
    updateButton: any;
    modalOverlay: ElementRef;
    visualElem: VisualizationComponent;
    save: EventEmitter<any>;
    constructor(bookmarkService: BookmarkService, notifier: NotificationService, snowplowService: SnowplowService, configService: ConfigService, dvService: DataVizUiService);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    getBookmarks(reportName?: string): void;
    sortBookmarks(bookmarks: PowerbiBookmark[]): void;
    closeDropdown(event: object): void;
    onClick(event: Event): void;
    onTaxonomyChange(reportName: string): void;
    onBookmarkSelect(event: any, state: PowerbiBookmark): void;
    onSearchBookmark(event: Event): void;
    onBookmarkNameChange(name: string): void;
    saveBookmark(data: any): void;
    createBookmark(): void;
    subscribeCreateBookmark(bookmark: PowerbiBookmark): void;
    updateBookmark(): void;
    subscribeUpdateBookmark(bookmark: PowerbiBookmark): void;
    updateBookmarkName(): void;
    subscribeUpdateBookmarkName(bookmark: PowerbiBookmark, updateName: string): void;
    editBookmark(bookmark: PowerbiBookmark): void;
    deleteBookmark(bookmark: PowerbiBookmark): void;
    confirmDeleteBookmark(): void;
    subscribeConfirmDeleteBookmark(): void;
    closeModal(): void;
    resetDropdown(): void;
    getDefaultView(): void;
    saveView(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDef<BookmarksComponent, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<BookmarksComponent, "lib-bookmarks", never, { "visualElem": "visualElem"; }, { "save": "save"; }, never, never>;
}
//# sourceMappingURL=bookmarks.component.d.ts.map